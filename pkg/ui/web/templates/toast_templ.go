// Code generated by templ - DO NOT EDIT.

// templ: version: v0.3.857
package templates

//lint:file-ignore SA4006 This context is only used if a nested component is present.

import (
	"github.com/a-h/templ"
	templruntime "github.com/a-h/templ/runtime"
)

func toastContainer() templ.Component {
	return templruntime.GeneratedTemplate(func(templ_7745c5c3_Input templruntime.GeneratedComponentInput) (templ_7745c5c3_Err error) {
		templ_7745c5c3_W, ctx := templ_7745c5c3_Input.Writer, templ_7745c5c3_Input.Context
		if templ_7745c5c3_CtxErr := ctx.Err(); templ_7745c5c3_CtxErr != nil {
			return templ_7745c5c3_CtxErr
		}
		templ_7745c5c3_Buffer, templ_7745c5c3_IsBuffer := templruntime.GetBuffer(templ_7745c5c3_W)
		if !templ_7745c5c3_IsBuffer {
			defer func() {
				templ_7745c5c3_BufErr := templruntime.ReleaseBuffer(templ_7745c5c3_Buffer)
				if templ_7745c5c3_Err == nil {
					templ_7745c5c3_Err = templ_7745c5c3_BufErr
				}
			}()
		}
		ctx = templ.InitializeContext(ctx)
		templ_7745c5c3_Var1 := templ.GetChildren(ctx)
		if templ_7745c5c3_Var1 == nil {
			templ_7745c5c3_Var1 = templ.NopComponent
		}
		ctx = templ.ClearChildren(ctx)
		templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 1, "<div id=\"toast-container\" class=\"fixed bottom-0 right-0 p-6 space-y-4 z-50\"></div><script>\n\t\t// Toast notification system\n\t\tfunction showToast(message, type = 'info') {\n\t\t\tconst toast = document.createElement('div');\n\t\t\ttoast.className = `rounded-lg px-6 py-4 shadow-lg transform transition-all duration-300 translate-y-full opacity-0`;\n\n\t\t\t// Set color based on type\n\t\t\tswitch(type) {\n\t\t\t\tcase 'success':\n\t\t\t\t\ttoast.classList.add('bg-green-500', 'text-white');\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'error':\n\t\t\t\t\ttoast.classList.add('bg-red-500', 'text-white');\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'warning':\n\t\t\t\t\ttoast.classList.add('bg-yellow-500', 'text-white');\n\t\t\t\t\tbreak;\n\t\t\t\tdefault:\n\t\t\t\t\ttoast.classList.add('bg-blue-500', 'text-white');\n\t\t\t}\n\n\t\t\ttoast.textContent = message;\n\n\t\t\tconst container = document.getElementById('toast-container');\n\t\t\tcontainer.appendChild(toast);\n\n\t\t\t// Animate in\n\t\t\tsetTimeout(() => {\n\t\t\t\ttoast.classList.remove('translate-y-full', 'opacity-0');\n\t\t\t}, 10);\n\n\t\t\t// Remove after 3 seconds\n\t\t\tsetTimeout(() => {\n\t\t\t\ttoast.classList.add('translate-y-full', 'opacity-0');\n\t\t\t\tsetTimeout(() => toast.remove(), 300);\n\t\t\t}, 3000);\n\t\t}\n\n\t\t// Listen for HTMX events\n\t\tdocument.body.addEventListener('htmx:afterRequest', function(evt) {\n\t\t\tif (evt.detail.successful) {\n\t\t\t\t// Check for custom success message in response headers\n\t\t\t\tconst message = evt.detail.xhr.getResponseHeader('X-Toast-Message');\n\t\t\t\tif (message) {\n\t\t\t\t\tshowToast(message, 'success');\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tshowToast('Operation failed', 'error');\n\t\t\t}\n\t\t});\n\t</script>")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		return nil
	})
}

var _ = templruntime.GeneratedTemplate

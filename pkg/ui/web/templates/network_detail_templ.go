// Code generated by templ - DO NOT EDIT.

// templ: version: v0.3.857
package templates

//lint:file-ignore SA4006 This context is only used if a nested component is present.

import (
	"github.com/a-h/templ"
	templruntime "github.com/a-h/templ/runtime"
)

import (
	"fmt"

	"github.com/golem-base/seqctl/pkg/network"
	"github.com/golem-base/seqctl/pkg/sequencer"
)

func NetworkDetail(net *network.Network, refreshInterval int) templ.Component {
	return templruntime.GeneratedTemplate(func(templ_7745c5c3_Input templruntime.GeneratedComponentInput) (templ_7745c5c3_Err error) {
		templ_7745c5c3_W, ctx := templ_7745c5c3_Input.Writer, templ_7745c5c3_Input.Context
		if templ_7745c5c3_CtxErr := ctx.Err(); templ_7745c5c3_CtxErr != nil {
			return templ_7745c5c3_CtxErr
		}
		templ_7745c5c3_Buffer, templ_7745c5c3_IsBuffer := templruntime.GetBuffer(templ_7745c5c3_W)
		if !templ_7745c5c3_IsBuffer {
			defer func() {
				templ_7745c5c3_BufErr := templruntime.ReleaseBuffer(templ_7745c5c3_Buffer)
				if templ_7745c5c3_Err == nil {
					templ_7745c5c3_Err = templ_7745c5c3_BufErr
				}
			}()
		}
		ctx = templ.InitializeContext(ctx)
		templ_7745c5c3_Var1 := templ.GetChildren(ctx)
		if templ_7745c5c3_Var1 == nil {
			templ_7745c5c3_Var1 = templ.NopComponent
		}
		ctx = templ.ClearChildren(ctx)
		templ_7745c5c3_Var2 := templruntime.GeneratedTemplate(func(templ_7745c5c3_Input templruntime.GeneratedComponentInput) (templ_7745c5c3_Err error) {
			templ_7745c5c3_W, ctx := templ_7745c5c3_Input.Writer, templ_7745c5c3_Input.Context
			templ_7745c5c3_Buffer, templ_7745c5c3_IsBuffer := templruntime.GetBuffer(templ_7745c5c3_W)
			if !templ_7745c5c3_IsBuffer {
				defer func() {
					templ_7745c5c3_BufErr := templruntime.ReleaseBuffer(templ_7745c5c3_Buffer)
					if templ_7745c5c3_Err == nil {
						templ_7745c5c3_Err = templ_7745c5c3_BufErr
					}
				}()
			}
			ctx = templ.InitializeContext(ctx)
			templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 1, "<script>\n\t\t\tdocument.addEventListener('alpine:init', () => {\n\t\t\t\tAlpine.data('sequencersTable', () => ({\n\t\t\t\t\tautoRefreshEnabled: true,\n\t\t\t\t\trefreshInterval: null,\n\n\t\t\t\t\tinit() {\n\t\t\t\t\t\t// Listen for toggle-refresh events\n\t\t\t\t\t\twindow.addEventListener('toggle-refresh', (event) => {\n\t\t\t\t\t\t\tthis.autoRefreshEnabled = event.detail.enabled;\n\t\t\t\t\t\t\tif (this.autoRefreshEnabled) {\n\t\t\t\t\t\t\t\tthis.startAutoRefresh();\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tthis.stopAutoRefresh();\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t});\n\n\t\t\t\t\t\t// Listen for successful HTMX requests to trigger refresh\n\t\t\t\t\t\tdocument.body.addEventListener('htmx:afterRequest', (event) => {\n\t\t\t\t\t\t\tif (event.detail.successful && event.detail.pathInfo.requestPath.includes('/api/v1/sequencers/')) {\n\t\t\t\t\t\t\t\t// Refresh the table after successful action\n\t\t\t\t\t\t\t\tsetTimeout(() => {\n\t\t\t\t\t\t\t\t\tconst tbody = document.querySelector('tbody[hx-get]');\n\t\t\t\t\t\t\t\t\tif (tbody) {\n\t\t\t\t\t\t\t\t\t\thtmx.trigger(tbody, 'refresh');\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}, 500);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t});\n\n\t\t\t\t\t\t// Start auto-refresh if enabled\n\t\t\t\t\t\tif (this.autoRefreshEnabled) {\n\t\t\t\t\t\t\tthis.startAutoRefresh();\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\n\t\t\t\t\tstartAutoRefresh() {\n\t\t\t\t\t\t// Clear any existing interval\n\t\t\t\t\t\tif (this.refreshInterval) {\n\t\t\t\t\t\t\tclearInterval(this.refreshInterval);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// Set up new interval using configured value\n\t\t\t\t\t\tconst intervalMs = (window.SEQCTL_CONFIG?.refreshInterval || 5) * 1000;\n\t\t\t\t\t\tthis.refreshInterval = setInterval(() => {\n\t\t\t\t\t\t\tconst tbody = document.querySelector('tbody[hx-get]');\n\t\t\t\t\t\t\tif (tbody && this.autoRefreshEnabled) {\n\t\t\t\t\t\t\t\thtmx.trigger(tbody, 'refresh');\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}, intervalMs);\n\t\t\t\t\t},\n\n\t\t\t\t\tstopAutoRefresh() {\n\t\t\t\t\t\tif (this.refreshInterval) {\n\t\t\t\t\t\t\tclearInterval(this.refreshInterval);\n\t\t\t\t\t\t\tthis.refreshInterval = null;\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\n\t\t\t\t\tprocessSequencersResponse(event) {\n\t\t\t\t\t\tconst sequencers = JSON.parse(event.detail.xhr.responseText);\n\t\t\t\t\t\tconst tbody = event.detail.target;\n\t\t\t\t\t\ttbody.innerHTML = '';\n\n\t\t\t\t\t\tsequencers.forEach(seq => {\n\t\t\t\t\t\t\tconst row = document.createElement('tr');\n\t\t\t\t\t\t\tlet actionsHtml = this.buildActionsMenu(seq);\n\n\t\t\t\t\t\t\trow.innerHTML = `\n\t\t\t\t\t\t\t\t<td class=\"whitespace-nowrap py-4 pl-4 pr-3 text-sm font-medium text-gray-900 dark:text-gray-100 sm:pl-6\">\n\t\t\t\t\t\t\t\t\t<div class=\"group relative\">\n\t\t\t\t\t\t\t\t\t\t<div class=\"flex items-center\">\n\t\t\t\t\t\t\t\t\t\t\t${seq.id}\n\t\t\t\t\t\t\t\t\t\t\t${seq.voting ? '<span class=\"ml-2 inline-flex items-center rounded-md bg-blue-50 dark:bg-blue-900/20 px-2 py-1 text-xs font-medium text-blue-700 dark:text-blue-400 ring-1 ring-inset ring-blue-700/10 dark:ring-blue-500/20\">Voter</span>' : ''}\n\t\t\t\t\t\t\t\t\t\t\t<svg class=\"ml-1 h-4 w-4 text-gray-400 dark:text-gray-600\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n\t\t\t\t\t\t\t\t\t\t\t\t<path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M13 16h-1v-4h-1m1-4h.01M21 12a9 9 0 11-18 0 9 9 0 0118 0z\"></path>\n\t\t\t\t\t\t\t\t\t\t\t</svg>\n\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t<div class=\"absolute left-0 bottom-full mb-2 hidden group-hover:block z-10 px-3 py-2 text-xs font-medium text-white bg-gray-900 dark:bg-gray-700 rounded-lg shadow-sm whitespace-nowrap\">\n\t\t\t\t\t\t\t\t\t\t\tRaft: ${seq.raft_addr}\n\t\t\t\t\t\t\t\t\t\t\t<div class=\"absolute top-full left-4 -mt-1 h-2 w-2 rotate-45 bg-gray-900 dark:bg-gray-700\"></div>\n\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t</td>\n\t\t\t\t\t\t\t\t<td class=\"whitespace-nowrap px-3 py-4 text-sm\">\n\t\t\t\t\t\t\t\t\t<div class=\"font-mono text-gray-900 dark:text-gray-100\">\n\t\t\t\t\t\t\t\t\t\t${seq.unsafe_l2}\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t</td>\n\t\t\t\t\t\t\t\t<td class=\"whitespace-nowrap px-3 py-4 text-sm\">\n\t\t\t\t\t\t\t\t\t<div class=\"flex items-center space-x-2\">\n\t\t\t\t\t\t\t\t\t\t${seq.conductor_active ?\n\t\t\t\t\t\t\t\t\t\t\t'<span class=\"inline-flex items-center rounded-md bg-green-50 dark:bg-green-900/20 px-2 py-1 text-xs font-medium text-green-700 dark:text-green-400 ring-1 ring-inset ring-green-600/20 dark:ring-green-500/20\">Active</span>' :\n\t\t\t\t\t\t\t\t\t\t\t'<span class=\"inline-flex items-center rounded-md bg-gray-50 dark:bg-gray-800 px-2 py-1 text-xs font-medium text-gray-600 dark:text-gray-400 ring-1 ring-inset ring-gray-500/10 dark:ring-gray-600/20\">Paused</span>'\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t${seq.conductor_leader ?\n\t\t\t\t\t\t\t\t\t\t\t'<span class=\"inline-flex items-center rounded-md bg-purple-50 dark:bg-purple-900/20 px-2 py-1 text-xs font-medium text-purple-700 dark:text-purple-400 ring-1 ring-inset ring-purple-700/10 dark:ring-purple-500/20\">Leader</span>' :\n\t\t\t\t\t\t\t\t\t\t\t''\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t</td>\n\t\t\t\t\t\t\t\t<td class=\"whitespace-nowrap px-3 py-4 text-sm\">\n\t\t\t\t\t\t\t\t\t<div class=\"flex items-center space-x-2\">\n\t\t\t\t\t\t\t\t\t\t${seq.sequencer_healthy ?\n\t\t\t\t\t\t\t\t\t\t\t'<span class=\"inline-flex items-center rounded-md bg-green-50 dark:bg-green-900/20 px-2 py-1 text-xs font-medium text-green-700 dark:text-green-400 ring-1 ring-inset ring-green-600/20 dark:ring-green-500/20\">Healthy</span>' :\n\t\t\t\t\t\t\t\t\t\t\t'<span class=\"inline-flex items-center rounded-md bg-red-50 dark:bg-red-900/20 px-2 py-1 text-xs font-medium text-red-700 dark:text-red-400 ring-1 ring-inset ring-red-600/10 dark:ring-red-500/20\">Unhealthy</span>'\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t${seq.sequencer_active ?\n\t\t\t\t\t\t\t\t\t\t\t'<span class=\"inline-flex items-center rounded-md bg-blue-50 dark:bg-blue-900/20 px-2 py-1 text-xs font-medium text-blue-700 dark:text-blue-400 ring-1 ring-inset ring-blue-700/10 dark:ring-blue-500/20\">Active</span>' :\n\t\t\t\t\t\t\t\t\t\t\t''\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t</td>\n\t\t\t\t\t\t\t\t<td class=\"whitespace-nowrap px-3 py-4 text-sm\">\n\t\t\t\t\t\t\t\t\t<div class=\"flex items-center space-x-2\">\n\t\t\t\t\t\t\t\t\t\t${actionsHtml}\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t</td>\n\t\t\t\t\t\t\t`;\n\t\t\t\t\t\t\ttbody.appendChild(row);\n\n\t\t\t\t\t\t\t// Re-process HTMX and Alpine.js for the new buttons\n\t\t\t\t\t\t\thtmx.process(row);\n\t\t\t\t\t\t\t// Initialize Alpine components in the new row\n\t\t\t\t\t\t\tAlpine.initTree(row);\n\t\t\t\t\t\t});\n\t\t\t\t\t},\n\n\t\t\t\t\tbuildActionsMenu(seq) {\n\t\t\t\t\t\tlet menuItems = '';\n\n\t\t\t\t\t\t// Pause/Resume Conductor\n\t\t\t\t\t\tif (seq.conductor_active) {\n\t\t\t\t\t\t\tmenuItems += `\n\t\t\t\t\t\t\t\t<button\n\t\t\t\t\t\t\t\t\ttype=\"button\"\n\t\t\t\t\t\t\t\t\t@click=\"openPauseModal('${seq.id}'); open = false\"\n\t\t\t\t\t\t\t\t\tclass=\"text-gray-700 dark:text-gray-300 block w-full px-4 py-2 text-left text-sm hover:bg-gray-100 dark:hover:bg-gray-700\"\n\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\tPause Conductor\n\t\t\t\t\t\t\t\t</button>\n\t\t\t\t\t\t\t`;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tmenuItems += `\n\t\t\t\t\t\t\t\t<button\n\t\t\t\t\t\t\t\t\ttype=\"button\"\n\t\t\t\t\t\t\t\t\t@click=\"openResumeModal('${seq.id}'); open = false\"\n\t\t\t\t\t\t\t\t\tclass=\"text-gray-700 dark:text-gray-300 block w-full px-4 py-2 text-left text-sm hover:bg-gray-100 dark:hover:bg-gray-700\"\n\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\tResume Conductor\n\t\t\t\t\t\t\t\t</button>\n\t\t\t\t\t\t\t`;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// Transfer Leadership\n\t\t\t\t\t\tif (!seq.conductor_leader) {\n\t\t\t\t\t\t\tmenuItems += `\n\t\t\t\t\t\t\t\t<button\n\t\t\t\t\t\t\t\t\ttype=\"button\"\n\t\t\t\t\t\t\t\t\t@click=\"openTransferModal('${seq.id}'); open = false\"\n\t\t\t\t\t\t\t\t\tclass=\"text-gray-700 dark:text-gray-300 block w-full px-4 py-2 text-left text-sm hover:bg-gray-100 dark:hover:bg-gray-700\"\n\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\tTransfer Leadership\n\t\t\t\t\t\t\t\t</button>\n\t\t\t\t\t\t\t`;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// Resign Leader (only show if current leader)\n\t\t\t\t\t\tif (seq.conductor_leader) {\n\t\t\t\t\t\t\tmenuItems += `\n\t\t\t\t\t\t\t\t<button\n\t\t\t\t\t\t\t\t\ttype=\"button\"\n\t\t\t\t\t\t\t\t\t@click=\"openResignModal('${seq.id}'); open = false\"\n\t\t\t\t\t\t\t\t\tclass=\"text-gray-700 dark:text-gray-300 block w-full px-4 py-2 text-left text-sm hover:bg-gray-100 dark:hover:bg-gray-700\"\n\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\tResign Leadership\n\t\t\t\t\t\t\t\t</button>\n\t\t\t\t\t\t\t`;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// Override Leader\n\t\t\t\t\t\tmenuItems += `\n\t\t\t\t\t\t\t<button\n\t\t\t\t\t\t\t\ttype=\"button\"\n\t\t\t\t\t\t\t\t@click=\"openOverrideModal('${seq.id}'); open = false\"\n\t\t\t\t\t\t\t\tclass=\"text-gray-700 dark:text-gray-300 block w-full px-4 py-2 text-left text-sm hover:bg-gray-100 dark:hover:bg-gray-700\"\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\tOverride Leader\n\t\t\t\t\t\t\t</button>\n\t\t\t\t\t\t`;\n\n\t\t\t\t\t\t// Halt/Force Active Sequencer\n\t\t\t\t\t\tif (seq.sequencer_active) {\n\t\t\t\t\t\t\tmenuItems += `\n\t\t\t\t\t\t\t\t<button\n\t\t\t\t\t\t\t\t\ttype=\"button\"\n\t\t\t\t\t\t\t\t\t@click=\"openHaltModal('${seq.id}'); open = false\"\n\t\t\t\t\t\t\t\t\tclass=\"text-gray-700 dark:text-gray-300 block w-full px-4 py-2 text-left text-sm hover:bg-gray-100 dark:hover:bg-gray-700\"\n\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\tHalt Sequencer\n\t\t\t\t\t\t\t\t</button>\n\t\t\t\t\t\t\t`;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tmenuItems += `\n\t\t\t\t\t\t\t\t<button\n\t\t\t\t\t\t\t\t\ttype=\"button\"\n\t\t\t\t\t\t\t\t\t@click=\"openForceActiveModal('${seq.id}'); open = false\"\n\t\t\t\t\t\t\t\t\tclass=\"text-gray-700 dark:text-gray-300 block w-full px-4 py-2 text-left text-sm hover:bg-gray-100 dark:hover:bg-gray-700\"\n\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\tForce Active\n\t\t\t\t\t\t\t\t</button>\n\t\t\t\t\t\t\t`;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// Leader-only actions\n\t\t\t\t\t\tif (seq.conductor_leader) {\n\t\t\t\t\t\t\tmenuItems += `\n\t\t\t\t\t\t\t\t<div class=\"border-t border-gray-100 dark:border-gray-700\">\n\t\t\t\t\t\t\t\t\t<button\n\t\t\t\t\t\t\t\t\t\ttype=\"button\"\n\t\t\t\t\t\t\t\t\t\t@click=\"openMembershipModal('${seq.id}'); open = false\"\n\t\t\t\t\t\t\t\t\t\tclass=\"text-gray-700 dark:text-gray-300 block w-full px-4 py-2 text-left text-sm hover:bg-gray-100 dark:hover:bg-gray-700\"\n\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\tUpdate Membership\n\t\t\t\t\t\t\t\t\t</button>\n\t\t\t\t\t\t\t\t\t<button\n\t\t\t\t\t\t\t\t\t\ttype=\"button\"\n\t\t\t\t\t\t\t\t\t\t@click=\"openRemoveModal('${seq.id}'); open = false\"\n\t\t\t\t\t\t\t\t\t\tclass=\"text-gray-700 dark:text-gray-300 block w-full px-4 py-2 text-left text-sm hover:bg-gray-100 dark:hover:bg-gray-700\"\n\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\tRemove Server\n\t\t\t\t\t\t\t\t\t</button>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t`;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\treturn `\n\t\t\t\t\t\t\t<div class=\"relative inline-block text-left\" x-data=\"{\n\t\t\t\t\t\t\t\topen: false,\n\t\t\t\t\t\t\t\ttoggle() {\n\t\t\t\t\t\t\t\t\tthis.open = !this.open;\n\t\t\t\t\t\t\t\t\tif (this.open) {\n\t\t\t\t\t\t\t\t\t\tthis.$nextTick(() => {\n\t\t\t\t\t\t\t\t\t\t\tthis.checkPosition();\n\t\t\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\tcheckPosition() {\n\t\t\t\t\t\t\t\t\tconst button = this.$el.querySelector('button');\n\t\t\t\t\t\t\t\t\tconst dropdown = this.$el.querySelector('[x-show]');\n\t\t\t\t\t\t\t\t\tconst buttonRect = button.getBoundingClientRect();\n\t\t\t\t\t\t\t\t\tconst dropdownHeight = 300; // Approximate height\n\t\t\t\t\t\t\t\t\tconst spaceBelow = window.innerHeight - buttonRect.bottom;\n\n\t\t\t\t\t\t\t\t\tif (spaceBelow < dropdownHeight) {\n\t\t\t\t\t\t\t\t\t\t// Open upward\n\t\t\t\t\t\t\t\t\t\tdropdown.classList.remove('mt-2', 'origin-top-right');\n\t\t\t\t\t\t\t\t\t\tdropdown.classList.add('mb-2', 'origin-bottom-right', 'bottom-full');\n\t\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\t\t// Open downward (default)\n\t\t\t\t\t\t\t\t\t\tdropdown.classList.remove('mb-2', 'origin-bottom-right', 'bottom-full');\n\t\t\t\t\t\t\t\t\t\tdropdown.classList.add('mt-2', 'origin-top-right');\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\">\n\t\t\t\t\t\t\t\t<button @click=\"toggle()\" type=\"button\" class=\"inline-flex w-full justify-center gap-x-1.5 rounded-md bg-white dark:bg-gray-800 px-3 py-2 text-sm font-semibold text-gray-900 dark:text-gray-100 shadow-sm ring-1 ring-inset ring-gray-300 dark:ring-gray-600 hover:bg-gray-50 dark:hover:bg-gray-700\">\n\t\t\t\t\t\t\t\t\tActions\n\t\t\t\t\t\t\t\t\t<svg class=\"-mr-1 h-5 w-5 text-gray-400\" viewBox=\"0 0 20 20\" fill=\"currentColor\">\n\t\t\t\t\t\t\t\t\t\t<path fill-rule=\"evenodd\" d=\"M5.23 7.21a.75.75 0 011.06.02L10 11.168l3.71-3.938a.75.75 0 111.08 1.04l-4.25 4.5a.75.75 0 01-1.08 0l-4.25-4.5a.75.75 0 01.02-1.06z\" clip-rule=\"evenodd\"></path>\n\t\t\t\t\t\t\t\t\t</svg>\n\t\t\t\t\t\t\t\t</button>\n\t\t\t\t\t\t\t\t<div\n\t\t\t\t\t\t\t\t\tx-show=\"open\"\n\t\t\t\t\t\t\t\t\t@click.away=\"open = false\"\n\t\t\t\t\t\t\t\t\tx-transition:enter=\"transition ease-out duration-100\"\n\t\t\t\t\t\t\t\t\tx-transition:enter-start=\"transform opacity-0 scale-95\"\n\t\t\t\t\t\t\t\t\tx-transition:enter-end=\"transform opacity-100 scale-100\"\n\t\t\t\t\t\t\t\t\tx-transition:leave=\"transition ease-in duration-75\"\n\t\t\t\t\t\t\t\t\tx-transition:leave-start=\"transform opacity-100 scale-100\"\n\t\t\t\t\t\t\t\t\tx-transition:leave-end=\"transform opacity-0 scale-95\"\n\t\t\t\t\t\t\t\t\tclass=\"absolute right-0 z-50 mt-2 w-56 origin-top-right rounded-md bg-white dark:bg-gray-800 shadow-lg ring-1 ring-black ring-opacity-5 dark:ring-gray-700 focus:outline-none\"\n\t\t\t\t\t\t\t\t\tstyle=\"display: none;\"\n\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t<div class=\"py-1 max-h-96 overflow-y-auto\">\n\t\t\t\t\t\t\t\t\t\t${menuItems}\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t`;\n\t\t\t\t\t}\n\t\t\t\t}))\n\t\t\t});\n\t\t</script> <div class=\"px-4 sm:px-6 lg:px-8 pb-96\"><div class=\"sm:flex sm:items-center\"><div class=\"sm:flex-auto\"><h1 class=\"text-2xl font-semibold leading-6 text-gray-900 dark:text-gray-100\">")
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
			var templ_7745c5c3_Var3 string
			templ_7745c5c3_Var3, templ_7745c5c3_Err = templ.JoinStringErrs(net.Name())
			if templ_7745c5c3_Err != nil {
				return templ.Error{Err: templ_7745c5c3_Err, FileName: `pkg/ui/web/templates/network_detail.templ`, Line: 307, Col: 95}
			}
			_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString(templ.EscapeString(templ_7745c5c3_Var3))
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
			templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 2, "</h1><p class=\"mt-2 text-sm text-gray-700 dark:text-gray-300\">Manage sequencers in this network</p></div><div class=\"mt-4 sm:ml-16 sm:mt-0 sm:flex-none\"><a href=\"/\" class=\"block rounded-md bg-gray-600 dark:bg-gray-700 px-3 py-2 text-center text-sm font-semibold text-white shadow-sm hover:bg-gray-500 dark:hover:bg-gray-600 focus-visible:outline focus-visible:outline-2 focus-visible:outline-offset-2 focus-visible:outline-gray-600\">Back to Networks</a></div></div><!-- Network Summary --><div class=\"mt-6 grid grid-cols-1 gap-5 sm:grid-cols-2 lg:grid-cols-4\"><div class=\"overflow-hidden rounded-lg bg-white dark:bg-gray-800 px-4 py-5 shadow sm:p-6\"><dt class=\"truncate text-sm font-medium text-gray-500 dark:text-gray-400\">Total Sequencers</dt><dd class=\"mt-1 text-3xl font-semibold tracking-tight text-gray-900 dark:text-gray-100\">")
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
			var templ_7745c5c3_Var4 string
			templ_7745c5c3_Var4, templ_7745c5c3_Err = templ.JoinStringErrs(fmt.Sprintf("%d", len(net.Sequencers())))
			if templ_7745c5c3_Err != nil {
				return templ.Error{Err: templ_7745c5c3_Err, FileName: `pkg/ui/web/templates/network_detail.templ`, Line: 322, Col: 135}
			}
			_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString(templ.EscapeString(templ_7745c5c3_Var4))
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
			templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 3, "</dd></div><div class=\"overflow-hidden rounded-lg bg-white dark:bg-gray-800 px-4 py-5 shadow sm:p-6\"><dt class=\"truncate text-sm font-medium text-gray-500 dark:text-gray-400\">Current Leader</dt><dd class=\"mt-1 text-lg font-medium text-gray-900 dark:text-gray-100\">")
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
			if leader := net.ConductorLeader(); leader != nil {
				var templ_7745c5c3_Var5 string
				templ_7745c5c3_Var5, templ_7745c5c3_Err = templ.JoinStringErrs(leader.ID())
				if templ_7745c5c3_Err != nil {
					return templ.Error{Err: templ_7745c5c3_Err, FileName: `pkg/ui/web/templates/network_detail.templ`, Line: 328, Col: 20}
				}
				_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString(templ.EscapeString(templ_7745c5c3_Var5))
				if templ_7745c5c3_Err != nil {
					return templ_7745c5c3_Err
				}
			} else {
				templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 4, "<span class=\"text-gray-400 dark:text-gray-600\">None</span>")
				if templ_7745c5c3_Err != nil {
					return templ_7745c5c3_Err
				}
			}
			templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 5, "</dd></div><div class=\"overflow-hidden rounded-lg bg-white dark:bg-gray-800 px-4 py-5 shadow sm:p-6\"><dt class=\"truncate text-sm font-medium text-gray-500 dark:text-gray-400\">Active Sequencer</dt><dd class=\"mt-1 text-lg font-medium text-gray-900 dark:text-gray-100\">")
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
			if active := net.ActiveSequencer(); active != nil {
				var templ_7745c5c3_Var6 string
				templ_7745c5c3_Var6, templ_7745c5c3_Err = templ.JoinStringErrs(active.ID())
				if templ_7745c5c3_Err != nil {
					return templ.Error{Err: templ_7745c5c3_Err, FileName: `pkg/ui/web/templates/network_detail.templ`, Line: 338, Col: 20}
				}
				_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString(templ.EscapeString(templ_7745c5c3_Var6))
				if templ_7745c5c3_Err != nil {
					return templ_7745c5c3_Err
				}
			} else {
				templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 6, "<span class=\"text-gray-400 dark:text-gray-600\">None</span>")
				if templ_7745c5c3_Err != nil {
					return templ_7745c5c3_Err
				}
			}
			templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 7, "</dd></div><div class=\"overflow-hidden rounded-lg bg-white dark:bg-gray-800 px-4 py-5 shadow sm:p-6\"><dt class=\"truncate text-sm font-medium text-gray-500 dark:text-gray-400\">Network Health</dt><dd class=\"mt-1\">")
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
			if net.IsHealthy() {
				templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 8, "<span class=\"inline-flex items-center rounded-md bg-green-50 dark:bg-green-900/20 px-3 py-1 text-sm font-medium text-green-700 dark:text-green-400 ring-1 ring-inset ring-green-600/20 dark:ring-green-500/20\">Healthy</span>")
				if templ_7745c5c3_Err != nil {
					return templ_7745c5c3_Err
				}
			} else {
				templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 9, "<span class=\"inline-flex items-center rounded-md bg-red-50 dark:bg-red-900/20 px-3 py-1 text-sm font-medium text-red-700 dark:text-red-400 ring-1 ring-inset ring-red-600/10 dark:ring-red-500/20\">Unhealthy</span>")
				if templ_7745c5c3_Err != nil {
					return templ_7745c5c3_Err
				}
			}
			templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 10, "</dd></div></div><div class=\"mt-8 flow-root\" x-data=\"sequencersTable\"><div class=\"-mx-4 -my-2 sm:-mx-6 lg:-mx-8\" style=\"overflow: visible;\"><div class=\"inline-block min-w-full py-2 align-middle sm:px-6 lg:px-8\"><div class=\"shadow ring-1 ring-black ring-opacity-5 dark:ring-gray-700 sm:rounded-lg relative\" style=\"overflow: visible;\"><table class=\"min-w-full divide-y divide-gray-300 dark:divide-gray-700\"><thead class=\"bg-gray-50 dark:bg-gray-800\"><tr><th scope=\"col\" class=\"py-3.5 pl-4 pr-3 text-left text-sm font-semibold text-gray-900 dark:text-gray-100 sm:pl-6\">Sequencer ID</th><th scope=\"col\" class=\"px-3 py-3.5 text-left text-sm font-semibold text-gray-900 dark:text-gray-100\">Unsafe L2 Block</th><th scope=\"col\" class=\"px-3 py-3.5 text-left text-sm font-semibold text-gray-900 dark:text-gray-100\">Conductor</th><th scope=\"col\" class=\"px-3 py-3.5 text-left text-sm font-semibold text-gray-900 dark:text-gray-100\">Sequencer</th><th scope=\"col\" class=\"px-3 py-3.5 text-left text-sm font-semibold text-gray-900 dark:text-gray-100\">Actions</th></tr></thead> <tbody class=\"divide-y divide-gray-200 dark:divide-gray-700 bg-white dark:bg-gray-900\" id=\"sequencer-table\" hx-get=\"")
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
			var templ_7745c5c3_Var7 string
			templ_7745c5c3_Var7, templ_7745c5c3_Err = templ.JoinStringErrs(fmt.Sprintf("/api/v1/networks/%s/sequencers", net.Name()))
			if templ_7745c5c3_Err != nil {
				return templ.Error{Err: templ_7745c5c3_Err, FileName: `pkg/ui/web/templates/network_detail.templ`, Line: 386, Col: 75}
			}
			_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString(templ.EscapeString(templ_7745c5c3_Var7))
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
			templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 11, "\" hx-trigger=\"load, refresh\" hx-swap=\"none\" hx-target=\"this\" @htmx:after-request=\"processSequencersResponse($event)\">")
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
			templ_7745c5c3_Err = sequencerRows(net.Sequencers()).Render(ctx, templ_7745c5c3_Buffer)
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
			templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 12, "</tbody></table></div></div></div></div></div>")
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
			templ_7745c5c3_Err = actionModal().Render(ctx, templ_7745c5c3_Buffer)
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
			return nil
		})
		templ_7745c5c3_Err = Base(fmt.Sprintf("Network: %s", net.Name()), refreshInterval).Render(templ.WithChildren(ctx, templ_7745c5c3_Var2), templ_7745c5c3_Buffer)
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		return nil
	})
}

func sequencerRows(sequencers []*sequencer.Sequencer) templ.Component {
	return templruntime.GeneratedTemplate(func(templ_7745c5c3_Input templruntime.GeneratedComponentInput) (templ_7745c5c3_Err error) {
		templ_7745c5c3_W, ctx := templ_7745c5c3_Input.Writer, templ_7745c5c3_Input.Context
		if templ_7745c5c3_CtxErr := ctx.Err(); templ_7745c5c3_CtxErr != nil {
			return templ_7745c5c3_CtxErr
		}
		templ_7745c5c3_Buffer, templ_7745c5c3_IsBuffer := templruntime.GetBuffer(templ_7745c5c3_W)
		if !templ_7745c5c3_IsBuffer {
			defer func() {
				templ_7745c5c3_BufErr := templruntime.ReleaseBuffer(templ_7745c5c3_Buffer)
				if templ_7745c5c3_Err == nil {
					templ_7745c5c3_Err = templ_7745c5c3_BufErr
				}
			}()
		}
		ctx = templ.InitializeContext(ctx)
		templ_7745c5c3_Var8 := templ.GetChildren(ctx)
		if templ_7745c5c3_Var8 == nil {
			templ_7745c5c3_Var8 = templ.NopComponent
		}
		ctx = templ.ClearChildren(ctx)
		for _, seq := range sequencers {
			templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 13, "<tr><td class=\"whitespace-nowrap py-4 pl-4 pr-3 text-sm font-medium text-gray-900 dark:text-gray-100 sm:pl-6\"><div class=\"group relative\"><div class=\"flex items-center\">")
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
			var templ_7745c5c3_Var9 string
			templ_7745c5c3_Var9, templ_7745c5c3_Err = templ.JoinStringErrs(seq.ID())
			if templ_7745c5c3_Err != nil {
				return templ.Error{Err: templ_7745c5c3_Err, FileName: `pkg/ui/web/templates/network_detail.templ`, Line: 410, Col: 16}
			}
			_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString(templ.EscapeString(templ_7745c5c3_Var9))
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
			templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 14, " ")
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
			if seq.Voting() {
				templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 15, "<span class=\"ml-2 inline-flex items-center rounded-md bg-blue-50 dark:bg-blue-900/20 px-2 py-1 text-xs font-medium text-blue-700 dark:text-blue-400 ring-1 ring-inset ring-blue-700/10 dark:ring-blue-500/20\">Voter</span> ")
				if templ_7745c5c3_Err != nil {
					return templ_7745c5c3_Err
				}
			}
			templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 16, "<svg class=\"ml-1 h-4 w-4 text-gray-400 dark:text-gray-600\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\"><path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M13 16h-1v-4h-1m1-4h.01M21 12a9 9 0 11-18 0 9 9 0 0118 0z\"></path></svg></div><div class=\"absolute left-0 bottom-full mb-2 hidden group-hover:block z-10 px-3 py-2 text-xs font-medium text-white bg-gray-900 dark:bg-gray-700 rounded-lg shadow-sm whitespace-nowrap\">Raft: ")
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
			var templ_7745c5c3_Var10 string
			templ_7745c5c3_Var10, templ_7745c5c3_Err = templ.JoinStringErrs(seq.RaftAddr())
			if templ_7745c5c3_Err != nil {
				return templ.Error{Err: templ_7745c5c3_Err, FileName: `pkg/ui/web/templates/network_detail.templ`, Line: 421, Col: 28}
			}
			_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString(templ.EscapeString(templ_7745c5c3_Var10))
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
			templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 17, "<div class=\"absolute top-full left-4 -mt-1 h-2 w-2 rotate-45 bg-gray-900 dark:bg-gray-700\"></div></div></div></td><td class=\"whitespace-nowrap px-3 py-4 text-sm\"><div class=\"font-mono text-gray-900 dark:text-gray-100\">")
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
			var templ_7745c5c3_Var11 string
			templ_7745c5c3_Var11, templ_7745c5c3_Err = templ.JoinStringErrs(fmt.Sprintf("%d", seq.UnsafeL2()))
			if templ_7745c5c3_Err != nil {
				return templ.Error{Err: templ_7745c5c3_Err, FileName: `pkg/ui/web/templates/network_detail.templ`, Line: 428, Col: 40}
			}
			_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString(templ.EscapeString(templ_7745c5c3_Var11))
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
			templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 18, "</div></td><td class=\"whitespace-nowrap px-3 py-4 text-sm\"><div class=\"flex items-center space-x-2\">")
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
			if seq.ConductorActive() {
				templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 19, "<span class=\"inline-flex items-center rounded-md bg-green-50 dark:bg-green-900/20 px-2 py-1 text-xs font-medium text-green-700 dark:text-green-400 ring-1 ring-inset ring-green-600/20 dark:ring-green-500/20\">Active</span> ")
				if templ_7745c5c3_Err != nil {
					return templ_7745c5c3_Err
				}
			} else {
				templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 20, "<span class=\"inline-flex items-center rounded-md bg-gray-50 dark:bg-gray-800 px-2 py-1 text-xs font-medium text-gray-600 dark:text-gray-400 ring-1 ring-inset ring-gray-500/10 dark:ring-gray-600/20\">Paused</span> ")
				if templ_7745c5c3_Err != nil {
					return templ_7745c5c3_Err
				}
			}
			if seq.ConductorLeader() {
				templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 21, "<span class=\"inline-flex items-center rounded-md bg-purple-50 dark:bg-purple-900/20 px-2 py-1 text-xs font-medium text-purple-700 dark:text-purple-400 ring-1 ring-inset ring-purple-700/10 dark:ring-purple-500/20\">Leader</span>")
				if templ_7745c5c3_Err != nil {
					return templ_7745c5c3_Err
				}
			}
			templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 22, "</div></td><td class=\"whitespace-nowrap px-3 py-4 text-sm\"><div class=\"flex items-center space-x-2\">")
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
			if seq.SequencerHealthy() {
				templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 23, "<span class=\"inline-flex items-center rounded-md bg-green-50 dark:bg-green-900/20 px-2 py-1 text-xs font-medium text-green-700 dark:text-green-400 ring-1 ring-inset ring-green-600/20 dark:ring-green-500/20\">Healthy</span> ")
				if templ_7745c5c3_Err != nil {
					return templ_7745c5c3_Err
				}
			} else {
				templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 24, "<span class=\"inline-flex items-center rounded-md bg-red-50 dark:bg-red-900/20 px-2 py-1 text-xs font-medium text-red-700 dark:text-red-400 ring-1 ring-inset ring-red-600/10 dark:ring-red-500/20\">Unhealthy</span> ")
				if templ_7745c5c3_Err != nil {
					return templ_7745c5c3_Err
				}
			}
			if seq.SequencerActive() {
				templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 25, "<span class=\"inline-flex items-center rounded-md bg-blue-50 dark:bg-blue-900/20 px-2 py-1 text-xs font-medium text-blue-700 dark:text-blue-400 ring-1 ring-inset ring-blue-700/10 dark:ring-blue-500/20\">Active</span>")
				if templ_7745c5c3_Err != nil {
					return templ_7745c5c3_Err
				}
			}
			templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 26, "</div></td><td class=\"whitespace-nowrap px-3 py-4 text-sm\"><div class=\"flex items-center space-x-2\">")
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
			templ_7745c5c3_Err = sequencerActions(seq).Render(ctx, templ_7745c5c3_Buffer)
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
			templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 27, "</div></td></tr>")
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
		}
		return nil
	})
}

func sequencerActions(seq *sequencer.Sequencer) templ.Component {
	return templruntime.GeneratedTemplate(func(templ_7745c5c3_Input templruntime.GeneratedComponentInput) (templ_7745c5c3_Err error) {
		templ_7745c5c3_W, ctx := templ_7745c5c3_Input.Writer, templ_7745c5c3_Input.Context
		if templ_7745c5c3_CtxErr := ctx.Err(); templ_7745c5c3_CtxErr != nil {
			return templ_7745c5c3_CtxErr
		}
		templ_7745c5c3_Buffer, templ_7745c5c3_IsBuffer := templruntime.GetBuffer(templ_7745c5c3_W)
		if !templ_7745c5c3_IsBuffer {
			defer func() {
				templ_7745c5c3_BufErr := templruntime.ReleaseBuffer(templ_7745c5c3_Buffer)
				if templ_7745c5c3_Err == nil {
					templ_7745c5c3_Err = templ_7745c5c3_BufErr
				}
			}()
		}
		ctx = templ.InitializeContext(ctx)
		templ_7745c5c3_Var12 := templ.GetChildren(ctx)
		if templ_7745c5c3_Var12 == nil {
			templ_7745c5c3_Var12 = templ.NopComponent
		}
		ctx = templ.ClearChildren(ctx)
		templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 28, "<div class=\"relative inline-block text-left\" x-data=\"{ open: false }\"><button @click=\"open = !open\" type=\"button\" class=\"inline-flex w-full justify-center gap-x-1.5 rounded-md bg-white dark:bg-gray-800 px-3 py-2 text-sm font-semibold text-gray-900 dark:text-gray-100 shadow-sm ring-1 ring-inset ring-gray-300 dark:ring-gray-600 hover:bg-gray-50 dark:hover:bg-gray-700\">Actions <svg class=\"-mr-1 h-5 w-5 text-gray-400\" viewBox=\"0 0 20 20\" fill=\"currentColor\"><path fill-rule=\"evenodd\" d=\"M5.23 7.21a.75.75 0 011.06.02L10 11.168l3.71-3.938a.75.75 0 111.08 1.04l-4.25 4.5a.75.75 0 01-1.08 0l-4.25-4.5a.75.75 0 01.02-1.06z\" clip-rule=\"evenodd\"></path></svg></button><div x-show=\"open\" @click.away=\"open = false\" x-transition:enter=\"transition ease-out duration-100\" x-transition:enter-start=\"transform opacity-0 scale-95\" x-transition:enter-end=\"transform opacity-100 scale-100\" x-transition:leave=\"transition ease-in duration-75\" x-transition:leave-start=\"transform opacity-100 scale-100\" x-transition:leave-end=\"transform opacity-0 scale-95\" class=\"absolute right-0 z-10 mt-2 w-56 origin-top-right rounded-md bg-white dark:bg-gray-800 shadow-lg ring-1 ring-black ring-opacity-5 dark:ring-gray-700 focus:outline-none\"><div class=\"py-1\">")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		if seq.ConductorActive() {
			templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 29, "<button type=\"button\" @click=\"")
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
			var templ_7745c5c3_Var13 string
			templ_7745c5c3_Var13, templ_7745c5c3_Err = templ.JoinStringErrs(fmt.Sprintf("openPauseModal('%s'); open = false", seq.ID()))
			if templ_7745c5c3_Err != nil {
				return templ.Error{Err: templ_7745c5c3_Err, FileName: `pkg/ui/web/templates/network_detail.templ`, Line: 499, Col: 74}
			}
			_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString(templ.EscapeString(templ_7745c5c3_Var13))
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
			templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 30, "\" class=\"text-gray-700 block w-full px-4 py-2 text-left text-sm hover:bg-gray-100\">Pause Conductor</button> ")
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
		} else {
			templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 31, "<button type=\"button\" @click=\"")
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
			var templ_7745c5c3_Var14 string
			templ_7745c5c3_Var14, templ_7745c5c3_Err = templ.JoinStringErrs(fmt.Sprintf("openResumeModal('%s'); open = false", seq.ID()))
			if templ_7745c5c3_Err != nil {
				return templ.Error{Err: templ_7745c5c3_Err, FileName: `pkg/ui/web/templates/network_detail.templ`, Line: 507, Col: 75}
			}
			_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString(templ.EscapeString(templ_7745c5c3_Var14))
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
			templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 32, "\" class=\"text-gray-700 block w-full px-4 py-2 text-left text-sm hover:bg-gray-100\">Resume Conductor</button> ")
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
		}
		if !seq.ConductorLeader() {
			templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 33, "<button type=\"button\" @click=\"")
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
			var templ_7745c5c3_Var15 string
			templ_7745c5c3_Var15, templ_7745c5c3_Err = templ.JoinStringErrs(fmt.Sprintf("openTransferModal('%s'); open = false", seq.ID()))
			if templ_7745c5c3_Err != nil {
				return templ.Error{Err: templ_7745c5c3_Err, FileName: `pkg/ui/web/templates/network_detail.templ`, Line: 516, Col: 77}
			}
			_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString(templ.EscapeString(templ_7745c5c3_Var15))
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
			templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 34, "\" class=\"text-gray-700 block w-full px-4 py-2 text-left text-sm hover:bg-gray-100\">Transfer Leadership</button> ")
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
		}
		if seq.ConductorLeader() {
			templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 35, "<button type=\"button\" @click=\"")
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
			var templ_7745c5c3_Var16 string
			templ_7745c5c3_Var16, templ_7745c5c3_Err = templ.JoinStringErrs(fmt.Sprintf("openResignModal('%s'); open = false", seq.ID()))
			if templ_7745c5c3_Err != nil {
				return templ.Error{Err: templ_7745c5c3_Err, FileName: `pkg/ui/web/templates/network_detail.templ`, Line: 525, Col: 75}
			}
			_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString(templ.EscapeString(templ_7745c5c3_Var16))
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
			templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 36, "\" class=\"text-gray-700 block w-full px-4 py-2 text-left text-sm hover:bg-gray-100\">Resign Leadership</button> ")
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
		}
		templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 37, "<button type=\"button\" @click=\"")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		var templ_7745c5c3_Var17 string
		templ_7745c5c3_Var17, templ_7745c5c3_Err = templ.JoinStringErrs(fmt.Sprintf("openOverrideModal('%s'); open = false", seq.ID()))
		if templ_7745c5c3_Err != nil {
			return templ.Error{Err: templ_7745c5c3_Err, FileName: `pkg/ui/web/templates/network_detail.templ`, Line: 533, Col: 76}
		}
		_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString(templ.EscapeString(templ_7745c5c3_Var17))
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 38, "\" class=\"text-gray-700 block w-full px-4 py-2 text-left text-sm hover:bg-gray-100\">Override Leader</button> ")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		if seq.SequencerActive() {
			templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 39, "<button type=\"button\" @click=\"")
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
			var templ_7745c5c3_Var18 string
			templ_7745c5c3_Var18, templ_7745c5c3_Err = templ.JoinStringErrs(fmt.Sprintf("openHaltModal('%s'); open = false", seq.ID()))
			if templ_7745c5c3_Err != nil {
				return templ.Error{Err: templ_7745c5c3_Err, FileName: `pkg/ui/web/templates/network_detail.templ`, Line: 541, Col: 73}
			}
			_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString(templ.EscapeString(templ_7745c5c3_Var18))
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
			templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 40, "\" class=\"text-gray-700 block w-full px-4 py-2 text-left text-sm hover:bg-gray-100\">Halt Sequencer</button> ")
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
		} else {
			templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 41, "<button type=\"button\" @click=\"")
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
			var templ_7745c5c3_Var19 string
			templ_7745c5c3_Var19, templ_7745c5c3_Err = templ.JoinStringErrs(fmt.Sprintf("openForceActiveModal('%s'); open = false", seq.ID()))
			if templ_7745c5c3_Err != nil {
				return templ.Error{Err: templ_7745c5c3_Err, FileName: `pkg/ui/web/templates/network_detail.templ`, Line: 549, Col: 80}
			}
			_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString(templ.EscapeString(templ_7745c5c3_Var19))
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
			templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 42, "\" class=\"text-gray-700 block w-full px-4 py-2 text-left text-sm hover:bg-gray-100\">Force Active</button> ")
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
		}
		if seq.ConductorLeader() {
			templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 43, "<div class=\"border-t border-gray-100 dark:border-gray-700\"><button type=\"button\" @click=\"")
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
			var templ_7745c5c3_Var20 string
			templ_7745c5c3_Var20, templ_7745c5c3_Err = templ.JoinStringErrs(fmt.Sprintf("openMembershipModal('%s'); open = false", seq.ID()))
			if templ_7745c5c3_Err != nil {
				return templ.Error{Err: templ_7745c5c3_Err, FileName: `pkg/ui/web/templates/network_detail.templ`, Line: 559, Col: 80}
			}
			_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString(templ.EscapeString(templ_7745c5c3_Var20))
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
			templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 44, "\" class=\"text-gray-700 dark:text-gray-300 block w-full px-4 py-2 text-left text-sm hover:bg-gray-100 dark:hover:bg-gray-700\">Update Membership</button> <button type=\"button\" @click=\"")
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
			var templ_7745c5c3_Var21 string
			templ_7745c5c3_Var21, templ_7745c5c3_Err = templ.JoinStringErrs(fmt.Sprintf("openRemoveModal('%s'); open = false", seq.ID()))
			if templ_7745c5c3_Err != nil {
				return templ.Error{Err: templ_7745c5c3_Err, FileName: `pkg/ui/web/templates/network_detail.templ`, Line: 566, Col: 76}
			}
			_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString(templ.EscapeString(templ_7745c5c3_Var21))
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
			templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 45, "\" class=\"text-gray-700 dark:text-gray-300 block w-full px-4 py-2 text-left text-sm hover:bg-gray-100 dark:hover:bg-gray-700\">Remove Server</button></div>")
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
		}
		templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 46, "</div></div></div>")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		return nil
	})
}

func actionModal() templ.Component {
	return templruntime.GeneratedTemplate(func(templ_7745c5c3_Input templruntime.GeneratedComponentInput) (templ_7745c5c3_Err error) {
		templ_7745c5c3_W, ctx := templ_7745c5c3_Input.Writer, templ_7745c5c3_Input.Context
		if templ_7745c5c3_CtxErr := ctx.Err(); templ_7745c5c3_CtxErr != nil {
			return templ_7745c5c3_CtxErr
		}
		templ_7745c5c3_Buffer, templ_7745c5c3_IsBuffer := templruntime.GetBuffer(templ_7745c5c3_W)
		if !templ_7745c5c3_IsBuffer {
			defer func() {
				templ_7745c5c3_BufErr := templruntime.ReleaseBuffer(templ_7745c5c3_Buffer)
				if templ_7745c5c3_Err == nil {
					templ_7745c5c3_Err = templ_7745c5c3_BufErr
				}
			}()
		}
		ctx = templ.InitializeContext(ctx)
		templ_7745c5c3_Var22 := templ.GetChildren(ctx)
		if templ_7745c5c3_Var22 == nil {
			templ_7745c5c3_Var22 = templ.NopComponent
		}
		ctx = templ.ClearChildren(ctx)
		templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 47, "<div x-data=\"modalManager\" x-init=\"init()\"><!-- Transfer Leader Modal --><div x-show=\"activeModal === &#39;transfer-leader&#39;\" class=\"fixed inset-0 z-50 overflow-y-auto\" style=\"display: none;\"><div class=\"flex min-h-full items-end justify-center p-4 text-center sm:items-center sm:p-0\"><div class=\"fixed inset-0 bg-gray-500 bg-opacity-75 transition-opacity\" @click=\"closeModal()\"></div><div class=\"relative transform overflow-hidden rounded-lg bg-white dark:bg-gray-800 text-left shadow-xl transition-all sm:my-8 sm:w-full sm:max-w-lg\"><div class=\"bg-white dark:bg-gray-800 px-4 pb-4 pt-5 sm:p-6 sm:pb-4\"><div class=\"sm:flex sm:items-start\"><div class=\"mx-auto flex h-12 w-12 flex-shrink-0 items-center justify-center rounded-full bg-blue-100 sm:mx-0 sm:h-10 sm:w-10\"><svg class=\"h-6 w-6 text-blue-600\" fill=\"none\" viewBox=\"0 0 24 24\" stroke-width=\"1.5\" stroke=\"currentColor\"><path stroke-linecap=\"round\" stroke-linejoin=\"round\" d=\"M7.5 21L3 16.5m0 0L7.5 12M3 16.5h13.5m0-13.5L21 7.5m0 0L16.5 12M21 7.5H7.5\"></path></svg></div><div class=\"mt-3 text-center sm:ml-4 sm:mt-0 sm:text-left\"><h3 class=\"text-base font-semibold leading-6 text-gray-900 dark:text-gray-100\">Transfer Leadership</h3><div class=\"mt-2\"><p class=\"text-sm text-gray-500 dark:text-gray-400\">Select a sequencer to transfer leadership to.</p></div></div></div><div class=\"mt-4\"><div class=\"space-y-2\"><template x-for=\"seq in availableTargets\" :key=\"seq.id\"><label class=\"flex items-center p-3 border dark:border-gray-600 rounded-lg cursor-pointer hover:bg-gray-50 dark:hover:bg-gray-700\"><input type=\"radio\" name=\"target\" :value=\"seq.id\" x-model=\"selectedTarget\" @change=\"targetAddr = seq.raft_addr\" class=\"h-4 w-4 text-blue-600\"><div class=\"ml-3 flex-1\"><p class=\"text-sm font-medium text-gray-900 dark:text-gray-100\" x-text=\"seq.id\"></p><p class=\"text-sm text-gray-500 dark:text-gray-400\" x-text=\"seq.raft_addr\"></p></div></label></template></div></div></div><div class=\"bg-gray-50 dark:bg-gray-700 px-4 py-3 sm:flex sm:flex-row-reverse sm:px-6\"><button @click=\"submitTransferLeader()\" :disabled=\"!selectedTarget\" class=\"inline-flex w-full justify-center rounded-md bg-blue-600 px-3 py-2 text-sm font-semibold text-white shadow-sm hover:bg-blue-500 disabled:bg-gray-300 sm:ml-3 sm:w-auto\">Transfer Leadership</button> <button @click=\"closeModal()\" type=\"button\" class=\"mt-3 inline-flex w-full justify-center rounded-md bg-white dark:bg-gray-700 px-3 py-2 text-sm font-semibold text-gray-900 dark:text-gray-100 shadow-sm ring-1 ring-inset ring-gray-300 dark:ring-gray-600 hover:bg-gray-50 dark:hover:bg-gray-600 sm:mt-0 sm:w-auto\">Cancel</button></div></div></div></div><!-- Override Leader Modal --><div x-show=\"activeModal === &#39;override-leader&#39;\" class=\"fixed inset-0 z-50 overflow-y-auto\" style=\"display: none;\"><div class=\"flex min-h-full items-end justify-center p-4 text-center sm:items-center sm:p-0\"><div class=\"fixed inset-0 bg-gray-500 bg-opacity-75 transition-opacity\" @click=\"closeModal()\"></div><div class=\"relative transform overflow-hidden rounded-lg bg-white dark:bg-gray-800 text-left shadow-xl transition-all sm:my-8 sm:w-full sm:max-w-lg\"><div class=\"bg-white dark:bg-gray-800 px-4 pb-4 pt-5 sm:p-6 sm:pb-4\"><div class=\"sm:flex sm:items-start\"><div class=\"mx-auto flex h-12 w-12 flex-shrink-0 items-center justify-center rounded-full bg-yellow-100 sm:mx-0 sm:h-10 sm:w-10\"><svg class=\"h-6 w-6 text-yellow-600\" fill=\"none\" viewBox=\"0 0 24 24\" stroke-width=\"1.5\" stroke=\"currentColor\"><path stroke-linecap=\"round\" stroke-linejoin=\"round\" d=\"M12 9v3.75m-9.303 3.376c-.866 1.5.217 3.374 1.948 3.374h14.71c1.73 0 2.813-1.874 1.948-3.374L13.949 3.378c-.866-1.5-3.032-1.5-3.898 0L2.697 16.126zM12 15.75h.007v.008H12v-.008z\"></path></svg></div><div class=\"mt-3 text-center sm:ml-4 sm:mt-0 sm:text-left\"><h3 class=\"text-base font-semibold leading-6 text-gray-900 dark:text-gray-100\">Override Leader Status</h3><div class=\"mt-2\"><p class=\"text-sm text-gray-500 dark:text-gray-400\">This will override the leader status for sequencer <strong x-text=\"currentSequencerId\"></strong>.</p><div class=\"mt-4 rounded-md bg-yellow-50 dark:bg-yellow-900/20 p-4\"><p class=\"text-sm text-yellow-800 dark:text-yellow-200\">Warning: This can cause split-brain scenarios if not used correctly.</p></div></div></div></div></div><div class=\"bg-gray-50 dark:bg-gray-700 px-4 py-3 sm:flex sm:flex-row-reverse sm:px-6\"><button @click=\"submitOverrideLeader()\" class=\"inline-flex w-full justify-center rounded-md bg-yellow-600 px-3 py-2 text-sm font-semibold text-white shadow-sm hover:bg-yellow-500 sm:ml-3 sm:w-auto\">Override Leader</button> <button @click=\"closeModal()\" type=\"button\" class=\"mt-3 inline-flex w-full justify-center rounded-md bg-white dark:bg-gray-700 px-3 py-2 text-sm font-semibold text-gray-900 dark:text-gray-100 shadow-sm ring-1 ring-inset ring-gray-300 dark:ring-gray-600 hover:bg-gray-50 dark:hover:bg-gray-600 sm:mt-0 sm:w-auto\">Cancel</button></div></div></div></div><!-- Update Membership Modal --><div x-show=\"activeModal === &#39;update-membership&#39;\" class=\"fixed inset-0 z-50 overflow-y-auto\" style=\"display: none;\"><div class=\"flex min-h-full items-end justify-center p-4 text-center sm:items-center sm:p-0\"><div class=\"fixed inset-0 bg-gray-500 bg-opacity-75 transition-opacity\" @click=\"closeModal()\"></div><div class=\"relative transform overflow-hidden rounded-lg bg-white dark:bg-gray-800 text-left shadow-xl transition-all sm:my-8 sm:w-full sm:max-w-lg\"><div class=\"bg-white dark:bg-gray-800 px-4 pb-4 pt-5 sm:p-6 sm:pb-4\"><div class=\"sm:flex sm:items-start\"><div class=\"mx-auto flex h-12 w-12 flex-shrink-0 items-center justify-center rounded-full bg-green-100 sm:mx-0 sm:h-10 sm:w-10\"><svg class=\"h-6 w-6 text-green-600\" fill=\"none\" viewBox=\"0 0 24 24\" stroke-width=\"1.5\" stroke=\"currentColor\"><path stroke-linecap=\"round\" stroke-linejoin=\"round\" d=\"M18 18.72a9.094 9.094 0 003.741-.479 3 3 0 00-4.682-2.72m.94 3.198l.001.031c0 .225-.012.447-.037.666A11.944 11.944 0 0112 21c-2.17 0-4.207-.576-5.963-1.584A6.062 6.062 0 016 18.719m12 0a5.971 5.971 0 00-.941-3.197m0 0A5.995 5.995 0 0012 12.75a5.995 5.995 0 00-5.058 2.772m0 0a3 3 0 00-4.681 2.72 8.986 8.986 0 003.74.477m.94-3.197a5.971 5.971 0 00-.94 3.197M15 6.75a3 3 0 11-6 0 3 3 0 016 0zm6 3a2.25 2.25 0 11-4.5 0 2.25 2.25 0 014.5 0zm-13.5 0a2.25 2.25 0 11-4.5 0 2.25 2.25 0 014.5 0z\"></path></svg></div><div class=\"mt-3 text-center sm:ml-4 sm:mt-0 sm:text-left\"><h3 class=\"text-base font-semibold leading-6 text-gray-900 dark:text-gray-100\">Update Cluster Membership</h3><div class=\"mt-2\"><p class=\"text-sm text-gray-500 dark:text-gray-400\">Add a new server to the cluster.</p></div></div></div><div class=\"mt-4 space-y-4\"><div><label class=\"block text-sm font-medium text-gray-700 dark:text-gray-300\">Server ID</label> <input type=\"text\" x-model=\"newMember.server_id\" placeholder=\"e.g., sequencer-0\" class=\"mt-1 block w-full rounded-md border-gray-300 dark:border-gray-600 dark:bg-gray-700 dark:text-gray-100 shadow-sm focus:border-blue-500 focus:ring-blue-500 sm:text-sm\"></div><div><label class=\"block text-sm font-medium text-gray-700 dark:text-gray-300\">Server Address</label> <input type=\"text\" x-model=\"newMember.server_addr\" placeholder=\"e.g., sequencer-0.sequencer:1234\" class=\"mt-1 block w-full rounded-md border-gray-300 dark:border-gray-600 dark:bg-gray-700 dark:text-gray-100 shadow-sm focus:border-blue-500 focus:ring-blue-500 sm:text-sm\"></div><div class=\"flex items-center\"><input type=\"checkbox\" x-model=\"newMember.voting\" class=\"h-4 w-4 text-blue-600 focus:ring-blue-500 border-gray-300 rounded\"> <label class=\"ml-2 block text-sm text-gray-900 dark:text-gray-100\">Voting member</label></div></div></div><div class=\"bg-gray-50 dark:bg-gray-700 px-4 py-3 sm:flex sm:flex-row-reverse sm:px-6\"><button @click=\"submitUpdateMembership()\" :disabled=\"!newMember.server_id || !newMember.server_addr\" class=\"inline-flex w-full justify-center rounded-md bg-green-600 px-3 py-2 text-sm font-semibold text-white shadow-sm hover:bg-green-500 disabled:bg-gray-300 sm:ml-3 sm:w-auto\">Add Member</button> <button @click=\"closeModal()\" type=\"button\" class=\"mt-3 inline-flex w-full justify-center rounded-md bg-white dark:bg-gray-700 px-3 py-2 text-sm font-semibold text-gray-900 dark:text-gray-100 shadow-sm ring-1 ring-inset ring-gray-300 dark:ring-gray-600 hover:bg-gray-50 dark:hover:bg-gray-600 sm:mt-0 sm:w-auto\">Cancel</button></div></div></div></div><!-- Remove Server Modal --><div x-show=\"activeModal === &#39;remove-server&#39;\" class=\"fixed inset-0 z-50 overflow-y-auto\" style=\"display: none;\"><div class=\"flex min-h-full items-end justify-center p-4 text-center sm:items-center sm:p-0\"><div class=\"fixed inset-0 bg-gray-500 bg-opacity-75 transition-opacity\" @click=\"closeModal()\"></div><div class=\"relative transform overflow-hidden rounded-lg bg-white dark:bg-gray-800 text-left shadow-xl transition-all sm:my-8 sm:w-full sm:max-w-lg\"><div class=\"bg-white dark:bg-gray-800 px-4 pb-4 pt-5 sm:p-6 sm:pb-4\"><div class=\"sm:flex sm:items-start\"><div class=\"mx-auto flex h-12 w-12 flex-shrink-0 items-center justify-center rounded-full bg-red-100 sm:mx-0 sm:h-10 sm:w-10\"><svg class=\"h-6 w-6 text-red-600\" fill=\"none\" viewBox=\"0 0 24 24\" stroke-width=\"1.5\" stroke=\"currentColor\"><path stroke-linecap=\"round\" stroke-linejoin=\"round\" d=\"M12 9v3.75m-9.303 3.376c-.866 1.5.217 3.374 1.948 3.374h14.71c1.73 0 2.813-1.874 1.948-3.374L13.949 3.378c-.866-1.5-3.032-1.5-3.898 0L2.697 16.126zM12 15.75h.007v.008H12v-.008z\"></path></svg></div><div class=\"mt-3 text-center sm:ml-4 sm:mt-0 sm:text-left\"><h3 class=\"text-base font-semibold leading-6 text-gray-900 dark:text-gray-100\">Remove Server from Cluster</h3><div class=\"mt-2\"><p class=\"text-sm text-gray-500 dark:text-gray-400\">Select a server to remove from the cluster.</p></div></div></div><div class=\"mt-4\"><div class=\"space-y-2\"><template x-for=\"seq in removeTargets\" :key=\"seq.id\"><label class=\"flex items-center p-3 border dark:border-gray-600 rounded-lg cursor-pointer hover:bg-gray-50 dark:hover:bg-gray-700\"><input type=\"radio\" name=\"remove_target\" :value=\"seq.id\" x-model=\"selectedRemoveTarget\" class=\"h-4 w-4 text-red-600\"><div class=\"ml-3 flex-1\"><p class=\"text-sm font-medium text-gray-900 dark:text-gray-100\" x-text=\"seq.id\"></p><p class=\"text-sm text-gray-500 dark:text-gray-400\" x-text=\"seq.raft_addr\"></p></div></label></template></div><div class=\"mt-4 rounded-md bg-red-50 dark:bg-red-900/20 p-4\"><p class=\"text-sm text-red-800 dark:text-red-200\">Warning: Removing a voting member may affect cluster quorum.</p></div></div></div><div class=\"bg-gray-50 dark:bg-gray-700 px-4 py-3 sm:flex sm:flex-row-reverse sm:px-6\"><button @click=\"submitRemoveServer()\" :disabled=\"!selectedRemoveTarget\" class=\"inline-flex w-full justify-center rounded-md bg-red-600 px-3 py-2 text-sm font-semibold text-white shadow-sm hover:bg-red-500 disabled:bg-gray-300 sm:ml-3 sm:w-auto\">Remove Server</button> <button @click=\"closeModal()\" type=\"button\" class=\"mt-3 inline-flex w-full justify-center rounded-md bg-white dark:bg-gray-700 px-3 py-2 text-sm font-semibold text-gray-900 dark:text-gray-100 shadow-sm ring-1 ring-inset ring-gray-300 dark:ring-gray-600 hover:bg-gray-50 dark:hover:bg-gray-600 sm:mt-0 sm:w-auto\">Cancel</button></div></div></div></div><!-- Pause Conductor Modal --><div x-show=\"activeModal === &#39;pause-conductor&#39;\" class=\"fixed inset-0 z-50 overflow-y-auto\" style=\"display: none;\"><div class=\"flex min-h-full items-end justify-center p-4 text-center sm:items-center sm:p-0\"><div class=\"fixed inset-0 bg-gray-500 bg-opacity-75 transition-opacity\" @click=\"closeModal()\"></div><div class=\"relative transform overflow-hidden rounded-lg bg-white dark:bg-gray-800 text-left shadow-xl transition-all sm:my-8 sm:w-full sm:max-w-lg\"><div class=\"bg-white dark:bg-gray-800 px-4 pb-4 pt-5 sm:p-6 sm:pb-4\"><div class=\"sm:flex sm:items-start\"><div class=\"mx-auto flex h-12 w-12 flex-shrink-0 items-center justify-center rounded-full bg-yellow-100 sm:mx-0 sm:h-10 sm:w-10\"><svg class=\"h-6 w-6 text-yellow-600\" fill=\"none\" viewBox=\"0 0 24 24\" stroke-width=\"1.5\" stroke=\"currentColor\"><path stroke-linecap=\"round\" stroke-linejoin=\"round\" d=\"M14.25 9v6m-4.5 0V9M21 12a9 9 0 11-18 0 9 9 0 0118 0z\"></path></svg></div><div class=\"mt-3 text-center sm:ml-4 sm:mt-0 sm:text-left\"><h3 class=\"text-base font-semibold leading-6 text-gray-900 dark:text-gray-100\">Pause Conductor</h3><div class=\"mt-2\"><p class=\"text-sm text-gray-500 dark:text-gray-400\">This will pause the conductor for sequencer <strong x-text=\"currentSequencerId\"></strong>. The sequencer will stop participating in consensus.</p></div></div></div></div><div class=\"bg-gray-50 dark:bg-gray-700 px-4 py-3 sm:flex sm:flex-row-reverse sm:px-6\"><button @click=\"submitPauseConductor()\" class=\"inline-flex w-full justify-center rounded-md bg-yellow-600 px-3 py-2 text-sm font-semibold text-white shadow-sm hover:bg-yellow-500 sm:ml-3 sm:w-auto\">Pause Conductor</button> <button @click=\"closeModal()\" type=\"button\" class=\"mt-3 inline-flex w-full justify-center rounded-md bg-white dark:bg-gray-700 px-3 py-2 text-sm font-semibold text-gray-900 dark:text-gray-100 shadow-sm ring-1 ring-inset ring-gray-300 dark:ring-gray-600 hover:bg-gray-50 dark:hover:bg-gray-600 sm:mt-0 sm:w-auto\">Cancel</button></div></div></div></div><!-- Resume Conductor Modal --><div x-show=\"activeModal === &#39;resume-conductor&#39;\" class=\"fixed inset-0 z-50 overflow-y-auto\" style=\"display: none;\"><div class=\"flex min-h-full items-end justify-center p-4 text-center sm:items-center sm:p-0\"><div class=\"fixed inset-0 bg-gray-500 bg-opacity-75 transition-opacity\" @click=\"closeModal()\"></div><div class=\"relative transform overflow-hidden rounded-lg bg-white dark:bg-gray-800 text-left shadow-xl transition-all sm:my-8 sm:w-full sm:max-w-lg\"><div class=\"bg-white dark:bg-gray-800 px-4 pb-4 pt-5 sm:p-6 sm:pb-4\"><div class=\"sm:flex sm:items-start\"><div class=\"mx-auto flex h-12 w-12 flex-shrink-0 items-center justify-center rounded-full bg-green-100 sm:mx-0 sm:h-10 sm:w-10\"><svg class=\"h-6 w-6 text-green-600\" fill=\"none\" viewBox=\"0 0 24 24\" stroke-width=\"1.5\" stroke=\"currentColor\"><path stroke-linecap=\"round\" stroke-linejoin=\"round\" d=\"M21 12a9 9 0 11-18 0 9 9 0 0118 0z\"></path> <path stroke-linecap=\"round\" stroke-linejoin=\"round\" d=\"M15.91 11.672a.375.375 0 010 .656l-5.603 3.113a.375.375 0 01-.557-.328V8.887c0-.286.307-.466.557-.327l5.603 3.112z\"></path></svg></div><div class=\"mt-3 text-center sm:ml-4 sm:mt-0 sm:text-left\"><h3 class=\"text-base font-semibold leading-6 text-gray-900 dark:text-gray-100\">Resume Conductor</h3><div class=\"mt-2\"><p class=\"text-sm text-gray-500 dark:text-gray-400\">This will resume the conductor for sequencer <strong x-text=\"currentSequencerId\"></strong>. The sequencer will start participating in consensus again.</p></div></div></div></div><div class=\"bg-gray-50 dark:bg-gray-700 px-4 py-3 sm:flex sm:flex-row-reverse sm:px-6\"><button @click=\"submitResumeConductor()\" class=\"inline-flex w-full justify-center rounded-md bg-green-600 px-3 py-2 text-sm font-semibold text-white shadow-sm hover:bg-green-500 sm:ml-3 sm:w-auto\">Resume Conductor</button> <button @click=\"closeModal()\" type=\"button\" class=\"mt-3 inline-flex w-full justify-center rounded-md bg-white dark:bg-gray-700 px-3 py-2 text-sm font-semibold text-gray-900 dark:text-gray-100 shadow-sm ring-1 ring-inset ring-gray-300 dark:ring-gray-600 hover:bg-gray-50 dark:hover:bg-gray-600 sm:mt-0 sm:w-auto\">Cancel</button></div></div></div></div><!-- Resign Leader Modal --><div x-show=\"activeModal === &#39;resign-leader&#39;\" class=\"fixed inset-0 z-50 overflow-y-auto\" style=\"display: none;\"><div class=\"flex min-h-full items-end justify-center p-4 text-center sm:items-center sm:p-0\"><div class=\"fixed inset-0 bg-gray-500 bg-opacity-75 transition-opacity\" @click=\"closeModal()\"></div><div class=\"relative transform overflow-hidden rounded-lg bg-white dark:bg-gray-800 text-left shadow-xl transition-all sm:my-8 sm:w-full sm:max-w-lg\"><div class=\"bg-white dark:bg-gray-800 px-4 pb-4 pt-5 sm:p-6 sm:pb-4\"><div class=\"sm:flex sm:items-start\"><div class=\"mx-auto flex h-12 w-12 flex-shrink-0 items-center justify-center rounded-full bg-red-100 sm:mx-0 sm:h-10 sm:w-10\"><svg class=\"h-6 w-6 text-red-600\" fill=\"none\" viewBox=\"0 0 24 24\" stroke-width=\"1.5\" stroke=\"currentColor\"><path stroke-linecap=\"round\" stroke-linejoin=\"round\" d=\"M12 9v3.75m9-.75a9 9 0 11-18 0 9 9 0 0118 0zm-9 3.75h.008v.008H12v-.008z\"></path></svg></div><div class=\"mt-3 text-center sm:ml-4 sm:mt-0 sm:text-left\"><h3 class=\"text-base font-semibold leading-6 text-gray-900 dark:text-gray-100\">Resign Leadership</h3><div class=\"mt-2\"><p class=\"text-sm text-gray-500 dark:text-gray-400\">Are you sure you want to resign leadership for sequencer <strong x-text=\"currentSequencerId\"></strong>? Another sequencer will be elected as the new leader.</p><div class=\"mt-4 rounded-md bg-red-50 dark:bg-red-900/20 p-4\"><p class=\"text-sm text-red-800 dark:text-red-200\">This action will trigger a new leader election in the cluster.</p></div></div></div></div></div><div class=\"bg-gray-50 dark:bg-gray-700 px-4 py-3 sm:flex sm:flex-row-reverse sm:px-6\"><button @click=\"submitResignLeader()\" class=\"inline-flex w-full justify-center rounded-md bg-red-600 px-3 py-2 text-sm font-semibold text-white shadow-sm hover:bg-red-500 sm:ml-3 sm:w-auto\">Resign Leadership</button> <button @click=\"closeModal()\" type=\"button\" class=\"mt-3 inline-flex w-full justify-center rounded-md bg-white dark:bg-gray-700 px-3 py-2 text-sm font-semibold text-gray-900 dark:text-gray-100 shadow-sm ring-1 ring-inset ring-gray-300 dark:ring-gray-600 hover:bg-gray-50 dark:hover:bg-gray-600 sm:mt-0 sm:w-auto\">Cancel</button></div></div></div></div><!-- Force Active Modal --><div x-show=\"activeModal === &#39;force-active&#39;\" class=\"fixed inset-0 z-50 overflow-y-auto\" style=\"display: none;\"><div class=\"flex min-h-full items-end justify-center p-4 text-center sm:items-center sm:p-0\"><div class=\"fixed inset-0 bg-gray-500 bg-opacity-75 transition-opacity\" @click=\"closeModal()\"></div><div class=\"relative transform overflow-hidden rounded-lg bg-white dark:bg-gray-800 text-left shadow-xl transition-all sm:my-8 sm:w-full sm:max-w-lg\"><div class=\"bg-white dark:bg-gray-800 px-4 pb-4 pt-5 sm:p-6 sm:pb-4\"><div class=\"sm:flex sm:items-start\"><div class=\"mx-auto flex h-12 w-12 flex-shrink-0 items-center justify-center rounded-full bg-yellow-100 sm:mx-0 sm:h-10 sm:w-10\"><svg class=\"h-6 w-6 text-yellow-600\" fill=\"none\" viewBox=\"0 0 24 24\" stroke-width=\"1.5\" stroke=\"currentColor\"><path stroke-linecap=\"round\" stroke-linejoin=\"round\" d=\"M12 9v3.75m-9.303 3.376c-.866 1.5.217 3.374 1.948 3.374h14.71c1.73 0 2.813-1.874 1.948-3.374L13.949 3.378c-.866-1.5-3.032-1.5-3.898 0L2.697 16.126zM12 15.75h.007v.008H12v-.008z\"></path></svg></div><div class=\"mt-3 text-center sm:ml-4 sm:mt-0 sm:text-left\"><h3 class=\"text-base font-semibold leading-6 text-gray-900 dark:text-gray-100\">Force Sequencer Active</h3><div class=\"mt-2\"><p class=\"text-sm text-gray-500 dark:text-gray-400\">This will force sequencer <strong x-text=\"currentSequencerId\"></strong> to become the active sequencer.</p><div class=\"mt-4 rounded-md bg-yellow-50 dark:bg-yellow-900/20 p-4\"><p class=\"text-sm text-yellow-800 dark:text-yellow-200\">Warning: This should only be used in emergency situations. It may cause temporary inconsistencies if another sequencer is already active.</p></div></div></div></div><div class=\"mt-4\"><label class=\"block text-sm font-medium text-gray-700 dark:text-gray-300\">Block Hash (optional)</label><div class=\"mt-1 flex rounded-md shadow-sm\"><input type=\"text\" x-model=\"forceActiveBlockHash\" placeholder=\"0x0000... or leave empty for zero hash\" class=\"block w-full flex-1 rounded-none rounded-l-md border-gray-300 dark:border-gray-600 dark:bg-gray-700 dark:text-gray-100 focus:border-blue-500 focus:ring-blue-500 sm:text-sm\"> <button type=\"button\" @click=\"fetchLatestBlockHash()\" :disabled=\"fetchingBlockHash\" class=\"inline-flex items-center rounded-r-md border border-l-0 border-gray-300 dark:border-gray-600 bg-gray-50 dark:bg-gray-700 px-3 text-gray-500 dark:text-gray-400 hover:bg-gray-100 dark:hover:bg-gray-600 sm:text-sm disabled:opacity-50\"><span x-show=\"!fetchingBlockHash\">Fetch Latest</span> <span x-show=\"fetchingBlockHash\">Fetching...</span></button></div><p class=\"mt-2 text-sm text-gray-500\">Specify the block hash to start from, or fetch the latest from an active sequencer.</p></div></div><div class=\"bg-gray-50 dark:bg-gray-700 px-4 py-3 sm:flex sm:flex-row-reverse sm:px-6\"><button @click=\"submitForceActive()\" class=\"inline-flex w-full justify-center rounded-md bg-yellow-600 px-3 py-2 text-sm font-semibold text-white shadow-sm hover:bg-yellow-500 sm:ml-3 sm:w-auto\">Force Active</button> <button @click=\"closeModal()\" type=\"button\" class=\"mt-3 inline-flex w-full justify-center rounded-md bg-white dark:bg-gray-700 px-3 py-2 text-sm font-semibold text-gray-900 dark:text-gray-100 shadow-sm ring-1 ring-inset ring-gray-300 dark:ring-gray-600 hover:bg-gray-50 dark:hover:bg-gray-600 sm:mt-0 sm:w-auto\">Cancel</button></div></div></div></div><!-- Halt Sequencer Modal --><div x-show=\"activeModal === &#39;halt-sequencer&#39;\" class=\"fixed inset-0 z-50 overflow-y-auto\" style=\"display: none;\"><div class=\"flex min-h-full items-end justify-center p-4 text-center sm:items-center sm:p-0\"><div class=\"fixed inset-0 bg-gray-500 bg-opacity-75 transition-opacity\" @click=\"closeModal()\"></div><div class=\"relative transform overflow-hidden rounded-lg bg-white dark:bg-gray-800 text-left shadow-xl transition-all sm:my-8 sm:w-full sm:max-w-lg\"><div class=\"bg-white dark:bg-gray-800 px-4 pb-4 pt-5 sm:p-6 sm:pb-4\"><div class=\"sm:flex sm:items-start\"><div class=\"mx-auto flex h-12 w-12 flex-shrink-0 items-center justify-center rounded-full bg-red-100 sm:mx-0 sm:h-10 sm:w-10\"><svg class=\"h-6 w-6 text-red-600\" fill=\"none\" viewBox=\"0 0 24 24\" stroke-width=\"1.5\" stroke=\"currentColor\"><path stroke-linecap=\"round\" stroke-linejoin=\"round\" d=\"M12 9v3.75m-9.303 3.376c-.866 1.5.217 3.374 1.948 3.374h14.71c1.73 0 2.813-1.874 1.948-3.374L13.949 3.378c-.866-1.5-3.032-1.5-3.898 0L2.697 16.126zM12 15.75h.007v.008H12v-.008z\"></path></svg></div><div class=\"mt-3 text-center sm:ml-4 sm:mt-0 sm:text-left\"><h3 class=\"text-base font-semibold leading-6 text-gray-900 dark:text-gray-100\">Halt Sequencer</h3><div class=\"mt-2\"><p class=\"text-sm text-gray-500 dark:text-gray-400\">This will halt sequencer <strong x-text=\"currentSequencerId\"></strong> and stop it from processing transactions.</p><div class=\"mt-4 rounded-md bg-red-50 dark:bg-red-900/20 p-4\"><p class=\"text-sm text-red-800 dark:text-red-200\">Warning: This will immediately stop the sequencer from producing blocks. Another sequencer must take over.</p></div></div></div></div></div><div class=\"bg-gray-50 dark:bg-gray-700 px-4 py-3 sm:flex sm:flex-row-reverse sm:px-6\"><button @click=\"submitHaltSequencer()\" class=\"inline-flex w-full justify-center rounded-md bg-red-600 px-3 py-2 text-sm font-semibold text-white shadow-sm hover:bg-red-500 sm:ml-3 sm:w-auto\">Halt Sequencer</button> <button @click=\"closeModal()\" type=\"button\" class=\"mt-3 inline-flex w-full justify-center rounded-md bg-white dark:bg-gray-700 px-3 py-2 text-sm font-semibold text-gray-900 dark:text-gray-100 shadow-sm ring-1 ring-inset ring-gray-300 dark:ring-gray-600 hover:bg-gray-50 dark:hover:bg-gray-600 sm:mt-0 sm:w-auto\">Cancel</button></div></div></div></div></div><script>\n\t\tdocument.addEventListener('alpine:init', () => {\n\t\t\tAlpine.data('modalManager', () => ({\n\t\t\t\tactiveModal: null,\n\t\t\t\tcurrentSequencerId: null,\n\t\t\t\tselectedTarget: null,\n\t\t\t\ttargetAddr: null,\n\t\t\t\tavailableTargets: [],\n\t\t\t\tremoveTargets: [],\n\t\t\t\tselectedRemoveTarget: null,\n\t\t\t\tnewMember: {\n\t\t\t\t\tserver_id: '',\n\t\t\t\t\tserver_addr: '',\n\t\t\t\t\tvoting: true\n\t\t\t\t},\n\t\t\t\tforceActiveBlockHash: '',\n\t\t\t\tfetchingBlockHash: false,\n\n\t\t\t\tinit() {\n\t\t\t\t\twindow.openTransferModal = this.openTransferModal.bind(this);\n\t\t\t\t\twindow.openOverrideModal = this.openOverrideModal.bind(this);\n\t\t\t\t\twindow.openMembershipModal = this.openMembershipModal.bind(this);\n\t\t\t\t\twindow.openRemoveModal = this.openRemoveModal.bind(this);\n\t\t\t\t\twindow.openPauseModal = this.openPauseModal.bind(this);\n\t\t\t\t\twindow.openResumeModal = this.openResumeModal.bind(this);\n\t\t\t\t\twindow.openResignModal = this.openResignModal.bind(this);\n\t\t\t\t\twindow.openForceActiveModal = this.openForceActiveModal.bind(this);\n\t\t\t\t\twindow.openHaltModal = this.openHaltModal.bind(this);\n\t\t\t\t},\n\n\t\t\t\tasync openTransferModal(sequencerId) {\n\t\t\t\t\tthis.currentSequencerId = sequencerId;\n\t\t\t\t\t// Fetch available targets from the same network\n\t\t\t\t\ttry {\n\t\t\t\t\t\tconst response = await fetch(`/api/v1/networks/${document.querySelector('h1').textContent}/sequencers`);\n\t\t\t\t\t\tconst sequencers = await response.json();\n\t\t\t\t\t\t// Filter out the current sequencer and non-voting members\n\t\t\t\t\t\tthis.availableTargets = sequencers.filter(s => s.id !== sequencerId && s.voting);\n\t\t\t\t\t} catch (error) {\n\t\t\t\t\t\tconsole.error('Failed to fetch sequencers:', error);\n\t\t\t\t\t}\n\t\t\t\t\tthis.activeModal = 'transfer-leader';\n\t\t\t\t},\n\n\t\t\t\topenOverrideModal(sequencerId) {\n\t\t\t\t\tthis.currentSequencerId = sequencerId;\n\t\t\t\t\tthis.activeModal = 'override-leader';\n\t\t\t\t},\n\n\t\t\t\topenMembershipModal(sequencerId) {\n\t\t\t\t\tthis.currentSequencerId = sequencerId;\n\t\t\t\t\tthis.newMember = { server_id: '', server_addr: '', voting: true };\n\t\t\t\t\tthis.activeModal = 'update-membership';\n\t\t\t\t},\n\n\t\t\t\tasync openRemoveModal(sequencerId) {\n\t\t\t\t\tthis.currentSequencerId = sequencerId;\n\t\t\t\t\t// Fetch sequencers to remove\n\t\t\t\t\ttry {\n\t\t\t\t\t\tconst response = await fetch(`/api/v1/networks/${document.querySelector('h1').textContent}/sequencers`);\n\t\t\t\t\t\tconst sequencers = await response.json();\n\t\t\t\t\t\t// Filter out the current sequencer (can't remove self)\n\t\t\t\t\t\tthis.removeTargets = sequencers.filter(s => s.id !== sequencerId);\n\t\t\t\t\t} catch (error) {\n\t\t\t\t\t\tconsole.error('Failed to fetch sequencers:', error);\n\t\t\t\t\t}\n\t\t\t\t\tthis.activeModal = 'remove-server';\n\t\t\t\t},\n\n\t\t\t\topenPauseModal(sequencerId) {\n\t\t\t\t\tthis.currentSequencerId = sequencerId;\n\t\t\t\t\tthis.activeModal = 'pause-conductor';\n\t\t\t\t},\n\n\t\t\t\topenResumeModal(sequencerId) {\n\t\t\t\t\tthis.currentSequencerId = sequencerId;\n\t\t\t\t\tthis.activeModal = 'resume-conductor';\n\t\t\t\t},\n\n\t\t\t\topenResignModal(sequencerId) {\n\t\t\t\t\tthis.currentSequencerId = sequencerId;\n\t\t\t\t\tthis.activeModal = 'resign-leader';\n\t\t\t\t},\n\n\t\t\t\topenForceActiveModal(sequencerId) {\n\t\t\t\t\tthis.currentSequencerId = sequencerId;\n\t\t\t\t\tthis.forceActiveBlockHash = '';\n\t\t\t\t\tthis.activeModal = 'force-active';\n\t\t\t\t},\n\n\t\t\t\topenHaltModal(sequencerId) {\n\t\t\t\t\tthis.currentSequencerId = sequencerId;\n\t\t\t\t\tthis.activeModal = 'halt-sequencer';\n\t\t\t\t},\n\n\t\t\t\tcloseModal() {\n\t\t\t\t\tthis.activeModal = null;\n\t\t\t\t\tthis.selectedTarget = null;\n\t\t\t\t\tthis.targetAddr = null;\n\t\t\t\t\tthis.selectedRemoveTarget = null;\n\t\t\t\t},\n\n\t\t\t\tasync submitTransferLeader() {\n\t\t\t\t\tif (!this.selectedTarget || !this.targetAddr) return;\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tconst response = await fetch(`/api/v1/sequencers/${this.currentSequencerId}/transfer-leader`, {\n\t\t\t\t\t\t\tmethod: 'POST',\n\t\t\t\t\t\t\theaders: { 'Content-Type': 'application/json' },\n\t\t\t\t\t\t\tbody: JSON.stringify({\n\t\t\t\t\t\t\t\ttarget_id: this.selectedTarget,\n\t\t\t\t\t\t\t\ttarget_addr: this.targetAddr\n\t\t\t\t\t\t\t})\n\t\t\t\t\t\t});\n\n\t\t\t\t\t\tif (response.ok) {\n\t\t\t\t\t\t\tthis.closeModal();\n\t\t\t\t\t\t\thtmx.trigger(document.querySelector('tbody[hx-get]'), 'refresh');\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tconst error = await response.json();\n\t\t\t\t\t\t\talert(error.detail || 'Failed to transfer leadership');\n\t\t\t\t\t\t}\n\t\t\t\t\t} catch (error) {\n\t\t\t\t\t\tconsole.error('Error:', error);\n\t\t\t\t\t\talert('Failed to transfer leadership');\n\t\t\t\t\t}\n\t\t\t\t},\n\n\t\t\t\tasync submitOverrideLeader() {\n\t\t\t\t\ttry {\n\t\t\t\t\t\tconst response = await fetch(`/api/v1/sequencers/${this.currentSequencerId}/override-leader`, {\n\t\t\t\t\t\t\tmethod: 'POST',\n\t\t\t\t\t\t\theaders: { 'Content-Type': 'application/json' },\n\t\t\t\t\t\t\tbody: JSON.stringify({ override: true })\n\t\t\t\t\t\t});\n\n\t\t\t\t\t\tif (response.ok) {\n\t\t\t\t\t\t\tthis.closeModal();\n\t\t\t\t\t\t\thtmx.trigger(document.querySelector('tbody[hx-get]'), 'refresh');\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tconst error = await response.json();\n\t\t\t\t\t\t\talert(error.detail || 'Failed to override leader');\n\t\t\t\t\t\t}\n\t\t\t\t\t} catch (error) {\n\t\t\t\t\t\tconsole.error('Error:', error);\n\t\t\t\t\t\talert('Failed to override leader');\n\t\t\t\t\t}\n\t\t\t\t},\n\n\t\t\t\tasync submitUpdateMembership() {\n\t\t\t\t\tif (!this.newMember.server_id || !this.newMember.server_addr) return;\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tconst response = await fetch(`/api/v1/sequencers/${this.currentSequencerId}/membership`, {\n\t\t\t\t\t\t\tmethod: 'PUT',\n\t\t\t\t\t\t\theaders: { 'Content-Type': 'application/json' },\n\t\t\t\t\t\t\tbody: JSON.stringify(this.newMember)\n\t\t\t\t\t\t});\n\n\t\t\t\t\t\tif (response.ok) {\n\t\t\t\t\t\t\tthis.closeModal();\n\t\t\t\t\t\t\thtmx.trigger(document.querySelector('tbody[hx-get]'), 'refresh');\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tconst error = await response.json();\n\t\t\t\t\t\t\talert(error.detail || 'Failed to update membership');\n\t\t\t\t\t\t}\n\t\t\t\t\t} catch (error) {\n\t\t\t\t\t\tconsole.error('Error:', error);\n\t\t\t\t\t\talert('Failed to update membership');\n\t\t\t\t\t}\n\t\t\t\t},\n\n\t\t\t\tasync submitRemoveServer() {\n\t\t\t\t\tif (!this.selectedRemoveTarget) return;\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tconst response = await fetch(`/api/v1/sequencers/${this.currentSequencerId}/membership`, {\n\t\t\t\t\t\t\tmethod: 'DELETE',\n\t\t\t\t\t\t\theaders: { 'Content-Type': 'application/json' },\n\t\t\t\t\t\t\tbody: JSON.stringify({ server_id: this.selectedRemoveTarget })\n\t\t\t\t\t\t});\n\n\t\t\t\t\t\tif (response.ok) {\n\t\t\t\t\t\t\tthis.closeModal();\n\t\t\t\t\t\t\thtmx.trigger(document.querySelector('tbody[hx-get]'), 'refresh');\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tconst error = await response.json();\n\t\t\t\t\t\t\talert(error.detail || 'Failed to remove server');\n\t\t\t\t\t\t}\n\t\t\t\t\t} catch (error) {\n\t\t\t\t\t\tconsole.error('Error:', error);\n\t\t\t\t\t\talert('Failed to remove server');\n\t\t\t\t\t}\n\t\t\t\t},\n\n\t\t\t\tasync submitPauseConductor() {\n\t\t\t\t\ttry {\n\t\t\t\t\t\tconst response = await fetch(`/api/v1/sequencers/${this.currentSequencerId}/pause`, {\n\t\t\t\t\t\t\tmethod: 'POST',\n\t\t\t\t\t\t\theaders: { 'Content-Type': 'application/json' }\n\t\t\t\t\t\t});\n\n\t\t\t\t\t\tif (response.ok) {\n\t\t\t\t\t\t\tthis.closeModal();\n\t\t\t\t\t\t\thtmx.trigger(document.querySelector('tbody[hx-get]'), 'refresh');\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tconst error = await response.json();\n\t\t\t\t\t\t\talert(error.detail || 'Failed to pause conductor');\n\t\t\t\t\t\t}\n\t\t\t\t\t} catch (error) {\n\t\t\t\t\t\tconsole.error('Error:', error);\n\t\t\t\t\t\talert('Failed to pause conductor');\n\t\t\t\t\t}\n\t\t\t\t},\n\n\t\t\t\tasync submitResumeConductor() {\n\t\t\t\t\ttry {\n\t\t\t\t\t\tconst response = await fetch(`/api/v1/sequencers/${this.currentSequencerId}/resume`, {\n\t\t\t\t\t\t\tmethod: 'POST',\n\t\t\t\t\t\t\theaders: { 'Content-Type': 'application/json' }\n\t\t\t\t\t\t});\n\n\t\t\t\t\t\tif (response.ok) {\n\t\t\t\t\t\t\tthis.closeModal();\n\t\t\t\t\t\t\thtmx.trigger(document.querySelector('tbody[hx-get]'), 'refresh');\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tconst error = await response.json();\n\t\t\t\t\t\t\talert(error.detail || 'Failed to resume conductor');\n\t\t\t\t\t\t}\n\t\t\t\t\t} catch (error) {\n\t\t\t\t\t\tconsole.error('Error:', error);\n\t\t\t\t\t\talert('Failed to resume conductor');\n\t\t\t\t\t}\n\t\t\t\t},\n\n\t\t\t\tasync submitResignLeader() {\n\t\t\t\t\ttry {\n\t\t\t\t\t\tconst response = await fetch(`/api/v1/sequencers/${this.currentSequencerId}/resign-leader`, {\n\t\t\t\t\t\t\tmethod: 'POST',\n\t\t\t\t\t\t\theaders: { 'Content-Type': 'application/json' }\n\t\t\t\t\t\t});\n\n\t\t\t\t\t\tif (response.ok) {\n\t\t\t\t\t\t\tthis.closeModal();\n\t\t\t\t\t\t\thtmx.trigger(document.querySelector('tbody[hx-get]'), 'refresh');\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tconst error = await response.json();\n\t\t\t\t\t\t\talert(error.detail || 'Failed to resign leadership');\n\t\t\t\t\t\t}\n\t\t\t\t\t} catch (error) {\n\t\t\t\t\t\tconsole.error('Error:', error);\n\t\t\t\t\t\talert('Failed to resign leadership');\n\t\t\t\t\t}\n\t\t\t\t},\n\n\t\t\t\tasync submitForceActive() {\n\t\t\t\t\ttry {\n\t\t\t\t\t\tconst body = {};\n\t\t\t\t\t\tif (this.forceActiveBlockHash) {\n\t\t\t\t\t\t\tbody.block_hash = this.forceActiveBlockHash;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tconst response = await fetch(`/api/v1/sequencers/${this.currentSequencerId}/force-active`, {\n\t\t\t\t\t\t\tmethod: 'POST',\n\t\t\t\t\t\t\theaders: { 'Content-Type': 'application/json' },\n\t\t\t\t\t\t\tbody: JSON.stringify(body)\n\t\t\t\t\t\t});\n\n\t\t\t\t\t\tif (response.ok) {\n\t\t\t\t\t\t\tthis.closeModal();\n\t\t\t\t\t\t\thtmx.trigger(document.querySelector('tbody[hx-get]'), 'refresh');\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tconst error = await response.json();\n\t\t\t\t\t\t\talert(error.detail || 'Failed to force sequencer active');\n\t\t\t\t\t\t}\n\t\t\t\t\t} catch (error) {\n\t\t\t\t\t\tconsole.error('Error:', error);\n\t\t\t\t\t\talert('Failed to force sequencer active');\n\t\t\t\t\t}\n\t\t\t\t},\n\n\t\t\t\tasync submitHaltSequencer() {\n\t\t\t\t\ttry {\n\t\t\t\t\t\tconst response = await fetch(`/api/v1/sequencers/${this.currentSequencerId}/halt`, {\n\t\t\t\t\t\t\tmethod: 'POST',\n\t\t\t\t\t\t\theaders: { 'Content-Type': 'application/json' }\n\t\t\t\t\t\t});\n\n\t\t\t\t\t\tif (response.ok) {\n\t\t\t\t\t\t\tthis.closeModal();\n\t\t\t\t\t\t\thtmx.trigger(document.querySelector('tbody[hx-get]'), 'refresh');\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tconst error = await response.json();\n\t\t\t\t\t\t\talert(error.detail || 'Failed to halt sequencer');\n\t\t\t\t\t\t}\n\t\t\t\t\t} catch (error) {\n\t\t\t\t\t\tconsole.error('Error:', error);\n\t\t\t\t\t\talert('Failed to halt sequencer');\n\t\t\t\t\t}\n\t\t\t\t},\n\n\t\t\t\tasync fetchLatestBlockHash() {\n\t\t\t\t\tthis.fetchingBlockHash = true;\n\t\t\t\t\ttry {\n\t\t\t\t\t\t// Get the network name and fetch sequencers\n\t\t\t\t\t\tconst networkName = document.querySelector('h1').textContent;\n\t\t\t\t\t\tconst response = await fetch(`/api/v1/networks/${networkName}/sequencers`);\n\t\t\t\t\t\tconst sequencers = await response.json();\n\n\t\t\t\t\t\t// Find an active sequencer that's not the current one\n\t\t\t\t\t\tconst activeSequencer = sequencers.find(s =>\n\t\t\t\t\t\t\ts.id !== this.currentSequencerId &&\n\t\t\t\t\t\t\ts.sequencer_active &&\n\t\t\t\t\t\t\ts.sequencer_healthy\n\t\t\t\t\t\t);\n\n\t\t\t\t\t\tif (!activeSequencer) {\n\t\t\t\t\t\t\talert('No active healthy sequencer found to fetch block hash from');\n\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// For now, we'll use the unsafe_l2 block number as a reference\n\t\t\t\t\t\t// In a real implementation, you'd have an API endpoint to get the actual block hash\n\t\t\t\t\t\talert(`Found active sequencer ${activeSequencer.id} at block ${activeSequencer.unsafe_l2}.\\n\\nNote: Direct block hash fetching is not yet implemented. Please manually input the block hash.`);\n\n\t\t\t\t\t\t// You could enhance this by adding an API endpoint to fetch the actual block hash\n\t\t\t\t\t\t// For example: /api/v1/sequencers/{id}/latest-block\n\n\t\t\t\t\t} catch (error) {\n\t\t\t\t\t\tconsole.error('Error fetching block hash:', error);\n\t\t\t\t\t\talert('Failed to fetch latest block hash');\n\t\t\t\t\t} finally {\n\t\t\t\t\t\tthis.fetchingBlockHash = false;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}));\n\t\t});\n\t</script>")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		return nil
	})
}

var _ = templruntime.GeneratedTemplate
